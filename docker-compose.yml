version: "3"

networks:
  nffl:
    name: nffl
    driver: bridge

services:
  rmq:
    image: rabbitmq:3-management-alpine
    container_name: rmq
    user: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - nffl

  mainnet-anvil:
    image: ghcr.io/foundry-rs/foundry:latest@sha256:8b843eb65cc7b155303b316f65d27173c862b37719dc095ef3a2ef27ce8d3c00
    container_name: mainnet-anvil
    ports:
      - "8545:8545"
    entrypoint: anvil
    volumes:
      - ./tests/anvil/data/avs-and-eigenlayer-deployed-anvil-state.json:/root/.anvil/state.json
    command: --host 0.0.0.0 --port 8545 --chain-id 1 --block-time 5 --load-state /root/.anvil/state.json
    healthcheck:
      test: ["CMD", "nc", "-zv", "0.0.0.0", "8545"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - nffl

  mainnet-anvil-setup:
    image: ghcr.io/foundry-rs/foundry:latest@sha256:8b843eb65cc7b155303b316f65d27173c862b37719dc095ef3a2ef27ce8d3c00
    container_name: mainnet-anvil-setup
    depends_on:
      mainnet-anvil:
        condition: service_healthy
    entrypoint: sh
    command:
      - -c
      - |
        cast rpc anvil_setBalance 0xD5A0359da7B310917d7760385516B2426E86ab7f 0x8ac7230489e80000
        cast rpc anvil_setBalance 0x9441540E8183d416f2Dc1901AB2034600f17B65a 0x8ac7230489e80000
    environment:
      - ETH_RPC_URL=http://mainnet-anvil:8545
    networks:
      - nffl

  rollup0-anvil:
    image: ghcr.io/foundry-rs/foundry:latest@sha256:8b843eb65cc7b155303b316f65d27173c862b37719dc095ef3a2ef27ce8d3c00
    container_name: rollup0-anvil
    ports:
      - "8546:8546"
    entrypoint: anvil
    volumes:
      - ./tests/anvil/data/rollup-avs-deployed-anvil-state.json:/root/.anvil/state.json
    command: --host 0.0.0.0 --port 8546 --chain-id 2 --block-time 5 --load-state /root/.anvil/state.json
    healthcheck:
      test: ["CMD", "nc", "-zv", "0.0.0.0", "8546"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - nffl

  rollup0-relayer:
    image: nffl-test-relayer:latest
    container_name: rollup0-relayer
    depends_on:
      rollup0-anvil:
        condition: service_healthy
      near-da-deploy:
        condition: service_completed_successfully
    expose:
      - 9091
    volumes:
      - near_cli_keys:/root/.near-credentials
    command:
      - run-args
      - --rpc-url
      - ws://rollup0-anvil:8546
      - --da-account-id
      - da2.test.near
      - --key-path
      - /root/.near-credentials/localnet/da2.test.near.json
      - --network
      - http://nffl-indexer:3030
      - --metrics-ip-port-address
      - rollup0-relayer:9091
    networks:
      - nffl

  rollup1-anvil:
    image: ghcr.io/foundry-rs/foundry:latest@sha256:8b843eb65cc7b155303b316f65d27173c862b37719dc095ef3a2ef27ce8d3c00
    container_name: rollup1-anvil
    ports:
      - "8547:8547"
    entrypoint: anvil
    volumes:
      - ./tests/anvil/data/rollup-avs-deployed-anvil-state.json:/root/.anvil/state.json
    command: --host 0.0.0.0 --port 8547 --chain-id 3 --block-time 5 --load-state /root/.anvil/state.json
    healthcheck:
      test: ["CMD", "nc", "-zv", "0.0.0.0", "8547"]
      interval: 2s
      timeout: 30s
      retries: 15
    networks:
      - nffl

  rollup1-relayer:
    image: nffl-test-relayer:latest
    container_name: rollup1-relayer
    depends_on:
      rollup1-anvil:
        condition: service_healthy
      near-da-deploy:
        condition: service_completed_successfully
    expose:
      - 9091
    volumes:
      - near_cli_keys:/root/.near-credentials
      - ./config-files:/etc/relayer
    command:
      - run-config
      - --path
      - /etc/relayer/relayer1-docker-compose.yaml
    networks:
      - nffl

  indexer:
    image: nffl-indexer:latest
    container_name: nffl-indexer
    profiles: ["1default-indexer"]
    depends_on:
      rmq:
        condition: service_healthy
      mainnet-anvil-setup:
        condition: service_completed_successfully
      indexer-setup:
        condition: service_completed_successfully
    ports:
      - "3030:3030"
    expose:
      - 9090 # prometheus port
    volumes:
      - near_cli_data:/root/.near
      - near_cli_keys:/root/.near-credentials
    command:
      - --rmq-address
      - amqp://rmq:5672
      - --da-contract-ids
      - da2.test.near
      - --da-contract-ids
      - da3.test.near
      - --rollup-ids
      - "2"
      - --rollup-ids
      - "3"
      - --metrics-ip-port-address
      - "0.0.0.0:9090"
    networks:
      - nffl

  fastnear-indexer:
    image: nffl-fast-indexer:latest
    container_name: nffl-fast-indexer
    profiles: ["fast-indexer"]
    depends_on:
      rmq:
        condition: service_healthy
      mainnet-anvil-setup:
        condition: service_completed_successfully
      indexer-setup:
        condition: service_completed_successfully
    ports:
      - "3030:3030"
    expose:
      - 9090 # prometheus port
    volumes:
      - near_cli_data:/root/.near
      - near_cli_keys:/root/.near-credentials
    command:
      - --rmq-address
      - amqp://rmq:5672
      - --da-contract-ids
      - da2.test.near
      - --da-contract-ids
      - da3.test.near
      - --rollup-ids
      - "2"
      - --rollup-ids
      - "3"
      - --metrics-ip-port-address
      - "0.0.0.0:9090"
    networks:
      - nffl

  indexer-setup:
    image: debian:bookworm
    container_name: nffl-indexer-setup
    volumes:
      - near_cli_data:/near-cli
      - near_cli_keys:/root/.near-credentials
    entrypoint: sh
    command:
      - -c
      - |
        rm -rf /near-cli/*
        rm -rf /root/.near-credentials/*
    networks:
      - nffl

  near-da-deploy:
    image: node:16
    container_name: nffl-near-da-deploy
    depends_on:
      indexer:
        condition: service_healthy
    volumes:
      - ./:/nffl/
      - near_cli_data:/near-cli
      - near_cli_keys:/root/.near-credentials
    entrypoint: sh
    command:
      - -c
      - |
        npm i -g near-cli@3.0.0
        near create-account da2.test.near --masterAccount test.near
        near deploy da2.test.near /nffl/tests/near/near_da_blob_store.wasm --initFunction new --initArgs {} --masterAccount test.near -f
        near create-account da3.test.near --masterAccount test.near
        near deploy da3.test.near /nffl/tests/near/near_da_blob_store.wasm --initFunction new --initArgs {} --masterAccount test.near -f
    environment:
      - NEAR_ENV=localnet
      - NEAR_CLI_LOCALNET_NETWORK_ID=localnet
      - NEAR_HELPER_ACCOUNT=near
      - NEAR_CLI_LOCALNET_KEY_PATH=/near-cli/validator_key.json
      - NEAR_NODE_URL=http://nffl-indexer:3030
    networks:
      - nffl

  aggregator:
    image: nffl-aggregator
    container_name: nffl-aggregator
    depends_on:
      mainnet-anvil-setup:
        condition: service_completed_successfully
    expose:
      - 9091
    volumes:
      - ./:/nffl/
    working_dir: /nffl
    command:
      - --config
      - config-files/aggregator-docker-compose.yaml
      - --nffl-deployment
      - contracts/evm/script/output/31337/sffl_avs_deployment_output.json
      - --ecdsa-private-key
      - "0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6"
    networks:
      - nffl

  agreator-health:
    image: debian:bookworm
    depends_on:
      aggregator:
        condition: service_started
    command: sh -c "apt update && apt install -y netcat-traditional && sleep infinity"
    healthcheck:
      test: ["CMD", "nc", "-zv", "nffl-aggregator", "9091"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - nffl

  operator0:
    image: nffl-operator
    container_name: nffl-operator0
    depends_on:
      rmq:
        condition: service_healthy
      mainnet-anvil-setup:
        condition: service_completed_successfully
      aggregator:
        condition: service_started
    expose:
      - 9090 # prometheus metrics port (defined in operator0-docker-compose.anvil.yaml file)
    volumes:
      - ./:/nffl/
    working_dir: /nffl
    environment:
      - OPERATOR_BLS_KEY_PASSWORD=fDUMDLmBROwlzzPXyIcy
      - OPERATOR_ECDSA_KEY_PASSWORD=EnJuncq01CiVk9UbuBYl
    command: --config config-files/operator0-docker-compose.anvil.yaml
    networks:
      - nffl

  operator0-health:
    image: debian:bookworm
    depends_on:
      operator0:
        condition: service_started
    command: sh -c "apt update && apt install -y netcat-traditional && sleep infinity"
    healthcheck:
      test: ["CMD", "nc", "-zv", "nffl-operator0", "9090"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - nffl

  operator1:
    image: nffl-operator
    container_name: nffl-operator1
    depends_on:
      operator0-health:
        condition: service_healthy
    expose:
      - 9091 # prometheus metrics port (defined in operator1-docker-compose.anvil.yaml file)
    volumes:
      - ./:/nffl/
    working_dir: /nffl
    environment:
      - OPERATOR_BLS_KEY_PASSWORD=2EVEUyHCrHZdfdo8lp29
      - OPERATOR_ECDSA_KEY_PASSWORD=isru1gvtykIavuk1Fg1Q
    command: --config config-files/operator1-docker-compose.anvil.yaml
    networks:
      - nffl

  operator1-health:
    image: debian:bookworm
    depends_on:
      operator1:
        condition: service_started
    command: sh -c "apt update && apt install -y netcat-traditional && sleep infinity"
    healthcheck:
      test: ["CMD", "nc", "-zv", "nffl-operator1", "9091"]
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - nffl

  # METRICS RELATED
  grafana:
    image: grafana/grafana:9.4.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      # See https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
      # and https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
      # They recommend using env vars instead of overwriting config.ini
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - nffl

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
      - --web.enable-remote-write-receiver
    restart: unless-stopped
    ports:
      - 9090:9090
    networks:
      - nffl
    # so that we can access the host from within the container
    # needed to get the metrics from host.docker.internal:9184/metrics
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  prometheus_data:
  grafana_data:
  near_cli_data:
  near_cli_keys:
