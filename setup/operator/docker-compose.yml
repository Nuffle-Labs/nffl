version: "3"

networks:
  nffl:
    name: nffl
    driver: bridge

services:
  rmq:
    image: rabbitmq:3-management-alpine
    container_name: rmq
    user: rabbitmq
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - nffl

  nffl-indexer:
    profiles: [indexer]
    image: ghcr.io/nuffle-labs/nffl/indexer:${SFFL_RELEASE}
    container_name: nffl-indexer
    depends_on:
      rmq:
        condition: service_healthy
    ports:
      - "127.0.0.1:3030:3030"
      - "127.0.0.1:9092:9092"
    environment:
      - CHAIN_ID=${NEAR_CHAIN_ID}
    volumes:
      - ./:/nffl/
      - ${NEAR_HOME_DIR}:/root/.near
      - ${NEAR_KEYS_DIR}:/root/.near-credentials
    command:
      - --config
      - /nffl/config/indexer.yaml
    restart: unless-stopped
    networks:
      - nffl
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "10"
        compress: "true"

  nffl-operator:
    profiles: [operator]
    image: ghcr.io/nuffle-labs/nffl/operator:${SFFL_RELEASE}
    container_name: nffl-operator
    depends_on:
      rmq:
        condition: service_healthy
      nffl-indexer:
        condition: service_healthy
    ports:
      - "127.0.0.1:9091:9091"
    volumes:
      - ./:/nffl/
    working_dir: /nffl
    environment:
      - OPERATOR_BLS_KEY_PASSWORD=${OPERATOR_BLS_KEY_PASSWORD}
      - OPERATOR_ECDSA_KEY_PASSWORD=${OPERATOR_ECDSA_KEY_PASSWORD}
    command: --config config/operator.yaml
    restart: unless-stopped
    networks:
      - nffl
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "50"
        compress: "true"

  operator-health:
    profiles: [operator]
    image: debian:bookworm
    depends_on:
      nffl-operator:
        condition: service_started
    command: sh -c "apt update && apt install -y netcat-traditional && sleep infinity"
    healthcheck:
      test: ["CMD", "nc", "-zv", "nffl-operator", "9091"]
      interval: 5s
      timeout: 75s
      retries: 15
    networks:
      - nffl

  grafana:
    profiles: [operator]
    image: grafana/grafana:9.4.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - nffl

  prometheus:
    profiles: [operator]
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
      - --web.enable-remote-write-receiver
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"
    networks:
      - nffl
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  prometheus_data:
  grafana_data:
